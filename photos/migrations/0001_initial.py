# Generated by Django 5.2.3 on 2025-06-10 12:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(db_index=True, max_length=100, unique=True)),
                ('original_filename', models.CharField(blank=True, max_length=255)),
                ('filename', models.CharField(blank=True, max_length=255)),
                ('path', models.TextField(blank=True)),
                ('path_edited', models.TextField(blank=True, null=True)),
                ('is_photo', models.BooleanField(default=True)),
                ('is_movie', models.BooleanField(default=False)),
                ('is_cloud_photo', models.BooleanField(default=False)),
                ('has_adjustments', models.BooleanField(default=False)),
                ('is_missing', models.BooleanField(default=False)),
                ('date', models.DateTimeField(db_index=True, null=True)),
                ('date_modified', models.DateTimeField(null=True)),
                ('date_added', models.DateTimeField(db_index=True, null=True)),
                ('exif_datetime', models.DateTimeField(null=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('place_name', models.CharField(blank=True, max_length=255)),
                ('place_country_code', models.CharField(blank=True, max_length=10)),
                ('place_address', models.TextField(blank=True)),
                ('place_is_home', models.BooleanField(default=False)),
                ('uti', models.CharField(blank=True, max_length=100)),
                ('live_photo', models.BooleanField(default=False)),
                ('live_photo_video_uuid', models.CharField(blank=True, max_length=100)),
                ('live_photo_video_path', models.TextField(blank=True)),
                ('is_burst', models.BooleanField(default=False)),
                ('burst_uuid', models.CharField(blank=True, max_length=100)),
                ('is_hdr', models.BooleanField(default=False)),
                ('is_portrait', models.BooleanField(default=False)),
                ('is_screenshot', models.BooleanField(default=False)),
                ('is_slow_mo', models.BooleanField(default=False)),
                ('is_selfie', models.BooleanField(default=False)),
                ('is_panorama', models.BooleanField(default=False)),
                ('has_raw', models.BooleanField(default=False)),
                ('raw_path', models.TextField(blank=True)),
                ('orientation', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('camera_make', models.CharField(blank=True, max_length=100)),
                ('camera_model', models.CharField(blank=True, max_length=100)),
                ('fstop', models.FloatField(blank=True, null=True)),
                ('aperture', models.FloatField(blank=True, null=True)),
                ('iso', models.IntegerField(blank=True, null=True)),
                ('focal_length', models.FloatField(blank=True, null=True)),
                ('exposure_time', models.FloatField(blank=True, null=True)),
                ('timezone_name', models.CharField(blank=True, max_length=100)),
                ('timezone_offset', models.IntegerField(blank=True, null=True)),
                ('favorite', models.BooleanField(db_index=True, default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('in_trash', models.BooleanField(default=False)),
                ('shared', models.BooleanField(default=False)),
                ('original_file_size', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date', 'favorite'], name='photos_phot_date_dc2af6_idx'), models.Index(fields=['camera_make', 'camera_model'], name='photos_phot_camera__362392_idx'), models.Index(fields=['latitude', 'longitude'], name='photos_phot_latitud_92201d_idx')],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('uuid', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('photos', models.ManyToManyField(related_name='persons', to='photos.photo')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('photos', models.ManyToManyField(related_name='labels', to='photos.photo')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('photos', models.ManyToManyField(related_name='keywords', to='photos.photo')),
            ],
        ),
        migrations.CreateModel(
            name='Face',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center_x', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('center_y', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('width', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('height', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=20)),
                ('ethnicity', models.CharField(blank=True, max_length=50)),
                ('quality', models.FloatField(blank=True, null=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faces', to='photos.person')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faces', to='photos.photo')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall', models.FloatField(blank=True, null=True)),
                ('aesthetics', models.FloatField(blank=True, null=True)),
                ('curation', models.FloatField(blank=True, null=True)),
                ('noise', models.FloatField(blank=True, null=True)),
                ('pleasant_camera_tilt', models.FloatField(blank=True, null=True)),
                ('pleasant_composition', models.FloatField(blank=True, null=True)),
                ('pleasant_lighting', models.FloatField(blank=True, null=True)),
                ('pleasant_pattern', models.FloatField(blank=True, null=True)),
                ('pleasant_subject_movement', models.FloatField(blank=True, null=True)),
                ('pleasant_symmetry', models.FloatField(blank=True, null=True)),
                ('pleasant_texture', models.FloatField(blank=True, null=True)),
                ('pleasant_tone', models.FloatField(blank=True, null=True)),
                ('utility_activity', models.FloatField(blank=True, null=True)),
                ('utility_blurry', models.FloatField(blank=True, null=True)),
                ('utility_colorful', models.FloatField(blank=True, null=True)),
                ('utility_interesting_subject', models.FloatField(blank=True, null=True)),
                ('utility_low_light', models.FloatField(blank=True, null=True)),
                ('utility_not_on_tripod', models.FloatField(blank=True, null=True)),
                ('utility_people', models.FloatField(blank=True, null=True)),
                ('utility_pet', models.FloatField(blank=True, null=True)),
                ('utility_poor_contrast', models.FloatField(blank=True, null=True)),
                ('utility_quality', models.FloatField(blank=True, null=True)),
                ('utility_sharply_focused', models.FloatField(blank=True, null=True)),
                ('utility_still_action', models.FloatField(blank=True, null=True)),
                ('utility_uninteresting_subject', models.FloatField(blank=True, null=True)),
                ('utility_vibrance', models.FloatField(blank=True, null=True)),
                ('curation_blurry', models.FloatField(blank=True, null=True)),
                ('curation_noise', models.FloatField(blank=True, null=True)),
                ('curation_interesting_subject', models.FloatField(blank=True, null=True)),
                ('curation_scene', models.FloatField(blank=True, null=True)),
                ('curation_light', models.FloatField(blank=True, null=True)),
                ('curation_activity', models.FloatField(blank=True, null=True)),
                ('curation_animated', models.FloatField(blank=True, null=True)),
                ('curation_face', models.FloatField(blank=True, null=True)),
                ('curation_landscape', models.FloatField(blank=True, null=True)),
                ('curation_time', models.FloatField(blank=True, null=True)),
                ('curation_version', models.FloatField(blank=True, null=True)),
                ('photo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='photos.photo')),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('is_shared', models.BooleanField(default=False)),
                ('photos', models.ManyToManyField(related_name='albums', to='photos.photo')),
            ],
            options={
                'unique_together': {('name', 'is_shared')},
            },
        ),
    ]
